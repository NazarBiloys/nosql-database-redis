# Managed by Terraform

 [global_tags]
    period = "20"

 [agent]
   ## Maximum number of unwritten metrics per output.
   metric_buffer_limit = 600000
   interval = "20s"


 #Statsd UDP/TCP Server
 [[inputs.statsd]]
   ## Protocol, must be "tcp", "udp", "udp4" or "udp6" (default=udp)
   protocol = "udp"
   ## MaxTCPConnection - applicable when protocol is set to tcp (default=250)
   max_tcp_connections = 350
   ## Enable TCP keep alive probes (default=false)
   tcp_keep_alive = false
   ## Specifies the keep-alive period for an active network connection.
   ## Only applies to TCP sockets and will be ignored if tcp_keep_alive is false.
   ## Defaults to the OS configuration.
   # tcp_keep_alive_period = "2h"
   ## Address and port to host UDP listener on
   service_address = ":8125"
   ## The following configuration options control when telegraf clears it's cache
   ## of previous values. If set to false, then telegraf will only clear it's
   ## cache when the daemon is restarted.
   ## Reset gauges every interval (default=true)
   delete_gauges = false
   ## Reset counters every interval (default=true)
   delete_counters = false
   ## Reset sets every interval (default=true)
   delete_sets = false
   ## Reset timings & histograms every interval (default=true)
   delete_timings = true
   ## Percentiles to calculate for timing & histogram stats
   percentiles = [25,75,99,90,50]
   ## separator to use between elements of a statsd metric
   metric_separator = "_"
   ## Parses tags in the datadog statsd format
   ## http://docs.datadoghq.com/guides/dogstatsd/
   #parse_data_dog_tags = true
   ## Parses datadog extensions to the statsd format
   datadog_extensions = true
   ## Statsd data translation templates, more info can be read here:
   ## https://github.com/influxdata/telegraf/blob/master/docs/TEMPLATE_PATTERN.md
   # templates = [
   #     "cpu.* measurement*"
   # ]
   ## Number of UDP messages allowed to queue up, once filled,
   ## the statsd server will start dropping packets
   allowed_pending_messages = 30000
   ## Number of timing/histogram values to track per-measurement in the
   ## calculation of percentiles. Raising this limit increases the accuracy
   ## of percentiles but also increases the memory usage and cpu time.
   percentile_limit = 5000
[[outputs.influxdb]]
  urls = ["http://influxdb:8086"]
  database = "influx"
  timeout = "5s"
  username = "admin"
  password = "admin"

[[inputs.mongodb]]
  ## An array of URLs of the form:
  ##   "mongodb://" [user ":" pass "@"] host [ ":" port]
  ## For example:
  ##   mongodb://user:auth_key@10.10.3.30:27017,
  ##   mongodb://10.10.3.33:18832,
  ##
  ## If connecting to a cluster, users must include the "?connect=direct" in
  ## the URL to ensure that the connection goes directly to the specified node
  ## and not have all connections passed to the master node.
  servers = ["mongodb://user:pass@mongodb:27017/"]

 # Keep the aggregate basicstats of each metric passing through.
 [[processors.rename]]

   [[processors.rename.replace]]
     field = "lower"
     dest = "min"

   [[processors.rename.replace]]
     field = "upper"
     dest = "max"

   [[processors.rename.replace]]
     field = "mean"
     dest = "avg"
